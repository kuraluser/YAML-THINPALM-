//Environment variables
ext{
    dbHost = System.getenv('DB_HOST') ?: ""
    dbName = System.getenv('DB_NAME') ?: ""
    dbUser = System.getenv('DB_USER') ?: ""
    dbPassword = System.getenv('DB_PASSWORD') ?: ""
    grpcPort = System.getenv('GRPC_PORT') ?: ""
	algoBaseURL = System.getenv('ALGO_BASE_URL') ?: ""
	hostRootPath = System.getenv('HOST_ROOT_PATH')?:""
}

appConfig {
  appName = 'loadable-study'
  persistence = 'springData'
  dataBase = 'postgres'
  logging = 'y'
  devTools = 'y'
  docker {
      imageName = 'cpdss-loadable-study'     
      containerName = 'loadable-study-container'
      networkName = 'cpdss-network'
      hostVolumeMapping {
          hostPath = hostRootPath
          containerPath = "/data"
      }
      swarm {
          serviceName = 'loadable-study-service'
          swarmMode = REPLICATED_MODE
          replicas = 1
          rollbackOnUpdateFailure = true
      }
      environment = ['GRPC_PORT': grpcPort, 'DB_HOST': dbHost, 'DB_NAME': dbName, 'DB_USER': dbUser, 
	  'DB_PASSWORD': dbPassword, 'ATTACHMENT_ROOT_PATH': '/data', 'ALGO_BASE_URL': algoBaseURL]
  }
  javaMainClass = "com.cpdss.loadablestudy.Application"
  grpc = 'y'
}

dependencies {
    implementation project(':common')
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
	  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
	  compile group: 'org.springframework', name: 'spring-web', version: '5.1.3.RELEASE'
    compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.0'
}
