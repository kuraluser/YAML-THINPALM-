//Environment variables
ext{
    dbHost = System.getenv('DB_HOST') ?: ""
    dbName = System.getenv('DB_NAME') ?: ""
    dbUser = System.getenv('DB_USER') ?: ""
    dbPassword = System.getenv('DB_PASSWORD') ?: ""
	keycloakURL = System.getenv('KEYCLOAK_URL')?:""
	hostRootPath = System.getenv('HOST_ROOT_PATH')?:""
	cpdssBuildEnv = System.getenv('CPDSS_BUILD_ENV')?:"" 
    redisPassword = System.getenv('REDIS_PASSWORD')?:""
    keycloakAdminUsername = System.getenv('KEYCLOAK_ADMIN_USER_NAME')?:""
    keycloakAdminPassword = System.getenv('KEYCLOAK_ADMIN_PASSWORD')?:""
    keycloakAdminClientId = System.getenv('KEYCLOAK_ADMIN_CLIENT_ID')?:""
	shipjwtSecret = System.getenv('SHIP_JWT_SECRET')?:""
    shipjwtValidity = System.getenv('SHIP_JWT_VALIDITY')?:""

    restPortHost = System.getenv('REST_PORT_HOST') ?: '8085'
    debugPortHost = System.getenv('DEBUG_PORT_HOST') ?: '5085'
    imageNameVal = System.getenv('IMAGE_NAME') ?: 'cpdss-gateway'
    containerNameVal = System.getenv('CONTAINER_NAME') ?: 'gateway-container'
    serviceNameVal = System.getenv('SERVICE_NAME') ?: 'gateway-service'
}

appConfig {
  appName = 'gateway'
  rest = 'y'
  grpcClient = 'y'
  persistence = 'springData'
  dataBase = 'postgres'
  logging = 'y'
  devTools = 'y'
  unitTest = 'y'
  security = 'jwt'
  rest = 'y'
  monitoring = 'y'
  docker {
        imageName = imageNameVal
        containerName = containerNameVal
        networkName = 'cpdss-network'
        memoryLimitInMB = 300
        hostVolumeMapping {
          hostPath = hostRootPath
          containerPath = "/data"
        }
        hostPortMapping {
          hostRestPort = Integer.parseInt(restPortHost)
          hostDebugPort = Integer.parseInt(debugPortHost)
        }
        healthCheck {
          healthCheckCmd = 'wget --no-verbose --spider http://localhost:8080/actuator/health'
          healthCheckIntervalInSec = 30
          healthCheckInitialDelayInSec = 60
        }
        swarm {
            serviceName = serviceNameVal
            swarmMode = REPLICATED_MODE
            replicas = 1
            rollbackOnUpdateFailure = true
        }
	  dns = ['8.8.8.8']	
      environment = ['GRPC_PORT': '8090', 'REST_PORT': '8080', 'ATTACHMENT_ROOT_PATH': '/data',
                     'CPDSS_BUILD_ENV': cpdssBuildEnv]
  }
  javaMainClass = "com.cpdss.gateway.Application"
  keyvaluestore = 'y'
}

dependencies {
    implementation project(':common')
    testImplementation('net.devh:grpc-server-spring-boot-starter:2.10.1.RELEASE')
    implementation 'org.keycloak:keycloak-spring-security-adapter:12.0.3'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'org.apache.commons:commons-collections4:4.4'  
    testRuntime "org.junit.platform:junit-platform-runner:1.5.2"
    compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	
    
}

test { useJUnitPlatform() }
