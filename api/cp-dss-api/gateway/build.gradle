//Environment variables
ext{
    dbHost = System.getenv('DB_HOST') ?: ""
    dbName = System.getenv('DB_NAME') ?: ""
    dbUser = System.getenv('DB_USER') ?: ""
    dbPassword = System.getenv('DB_PASSWORD') ?: ""
    grpcPort = System.getenv('GRPC_PORT') ?: ""
	keycloakURL = System.getenv('KEYCLOAK_URL')?:""
	hostRootPath = System.getenv('HOST_ROOT_PATH')?:""
	cpdssBuildEnv = System.getenv('CPDSS_BUILD_ENV')?:"" 
        redisPassword = System.getenv('REDIS_PASSWORD')?:"" 
        keycloakAdminUsername = System.getenv('KEYCLOAK_ADMIN_USER_NAME')?:""
        keycloakAdminPassword = System.getenv('KEYCLOAK_ADMIN_PASSWORD')?:""
        keycloakAdminClientId = System.getenv('KEYCLOAK_ADMIN_CLIENT_ID')?:""
	shipjwtSecret = System.getenv('SHIP_JWT_SECRET')?:""
    shipjwtValidity = System.getenv('SHIP_JWT_VALIDITY')?:""
}

appConfig {
  appName = 'gateway'
  rest = 'y'
  grpcClient = 'y'
  persistence = 'springData'
  dataBase = 'postgres'
  logging = 'y'
  devTools = 'y'
  security = 'jwt'
  monitoring = 'y'
  docker {
        imageName = 'cpdss-gateway'
        containerName = 'gateway-container'
        networkName = 'cpdss-network'
        hostVolumeMapping {
          hostPath = hostRootPath
          containerPath = "/data"
        }
        hostPortMapping {
            hostRestPort = 8080
        }
        swarm {
            serviceName = 'gateway-service'
            swarmMode = REPLICATED_MODE
            replicas = 1
            rollbackOnUpdateFailure = true
        }
	  dns = ['8.8.8.8']	
      environment = ['GRPC_PORT': grpcPort, 'DB_HOST': dbHost, 'DB_NAME': dbName, 'DB_USER': dbUser, 
	  'DB_PASSWORD': dbPassword, 'ATTACHMENT_ROOT_PATH': '/data', 'KEYCLOAK_URL': keycloakURL, 'CPDSS_BUILD_ENV': cpdssBuildEnv, 'REDIS_PASSWORD': redisPassword, 'KEYCLOAK_ADMIN_USER_NAME': keycloakAdminUsername, 'KEYCLOAK_ADMIN_PASSWORD': keycloakAdminPassword, 'KEYCLOAK_ADMIN_CLIENT_ID': keycloakAdminClientId, 'SHIP_JWT_SECRET': shipjwtSecret, 'SHIP_JWT_VALIDITY': shipjwtValidity]
  }
  javaMainClass = "com.cpdss.gateway.Application"
  keyvaluestore = 'y'
}

dependencies {
    implementation project(':common')
    testImplementation('net.devh:grpc-server-spring-boot-starter:2.10.1.RELEASE')
    implementation 'org.keycloak:keycloak-spring-security-adapter:12.0.3'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
    testRuntimeOnly "org.junit.platform:junit-platform-commons:1.7.0"
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'org.apache.commons:commons-collections4:4.4'
}
