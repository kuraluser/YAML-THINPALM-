syntax = "proto3";

option java_multiple_files = false;
option java_package = "com.cpdss.common.generated";

// import common definitions like ResponseStatus
import "common.proto";
import "google/protobuf/empty.proto";
import "cargo_info.proto";

service VesselInfoService {

	rpc GetAllVesselsByCompany (VesselRequest) returns (VesselReply) {
	}

	rpc GetVesselDetailsById (VesselRequest) returns (VesselReply) {
	}

	rpc GetVesselTanks (VesselRequest) returns (VesselReply) {
	}

	rpc GetVesselCargoTanks (VesselRequest) returns (VesselReply) {
	}

	rpc GetVesselDetailsForAlgo (VesselAlgoRequest) returns (VesselAlgoReply) {
	}

	rpc GetVesselDetailForSynopticalTable(VesselRequest) returns (VesselReply) {
	}

	rpc GetVesselDetailByVesselId(VesselRequest) returns (VesselReply) {
	}

	rpc GetVesselInfoByPaging(VesselRequestWithPaging) returns (VesselReply){}

	rpc GetVesselInfoBytankIds(VesselTankRequest) returns (VesselTankResponse){}

	rpc GetDWTFromVesselByVesselId(VesselDWTRequest) returns (VesselDWTResponse);

	rpc GetVesselInfoByVesselId(VesselIdRequest) returns (VesselIdResponse){}

	rpc GetVesselPumpsByVesselId(VesselIdRequest) returns (VesselPumpsResponse) {}
	
	rpc GetRulesByVesselIdAndSectionId(VesselRuleRequest) returns (VesselRuleReply) {}

	rpc GetVesselValveSequence(VesselRequest) returns (VesselValveSequenceReply) {}
	
	rpc GetLoadingInfoRules(LoadingInfoRulesRequest) returns (LoadingInfoRulesReply) {}
	
	rpc GetVesselsInformation(VesselsInfoRequest) returns (VesselsInformationReply) {}
	
	rpc GetVesselParticulars(LoadingInfoRulesRequest) returns (VesselParticulars) {} //used for Loading plan excel 
	
	rpc GetVesselDetaildInformation(VesselIdRequest) returns (VesselDetaildInfoReply){}

	rpc GetVesselTanksByTankIds(VesselTankRequest) returns (VesselTankReply){}

	//	Method to get vessel DB data using the table names and list of ids
	rpc GetVesselData(CommunicationDataGetRequest) returns (CommunicationDataResponse){}

	//	Method to update vessel DB data using the table name and JSON data
	rpc UpdateVesselData(CommunicationDataUpdateRequest) returns (ResponseStatus){}

	rpc GetAllCrewRank(google.protobuf.Empty) returns (CrewReply) {}

	rpc GetAllCrewVesselMapping (CrewVesselRequest) returns (CrewVesselReply);

	rpc GetAllCrewDetails (VesselsInfoRequest) returns (CrewDetailedReply);

	rpc SaveCrewDetails (CrewDetailed) returns (CrewDetailsReply);

	rpc SaveCrewVesselMappings (CrewVesselMappingRequest) returns (CrewVesselReply);

	rpc GetAllCrewDetailsByRank (VesselsInfoRequest) returns (CrewDetailedReply);
}


message VesselParticulars {
	int64 vesselId = 1;
	string shipMaxLoadingRate = 2;
	string shipMaxFlowRate = 3;
	string shipMaxFlowRatePerTank = 4;
	string maxLoadingRateSlopP = 5;
	string maxLoadingRateSlopS = 6;
	int64 ballastPumpCount = 7;
	int64 capacityPerPump=8;
	int64 shipManifold =9;
	string summerDraft =10;
	string tropicalDraft =11;
	string freshMLD =12;
	string summerDeadweight =13;
	string summerDisplacement =14;
	string cargoTankCapacity =15;
	ResponseStatus responseStatus = 16;
	string highVelocityVentingPressure = 17;
	string highVelocityVentingVaccum = 18;
	string pvBreakerVentingPressure = 19;
	string pvBreakerVentingVaccum = 20;
	int64 vesselTypeId = 21;
}


// Mapped to pump_type Table in vessel DB
enum VesselPumpTypes {
		EMPTY_PUMP = 0;
		CARGO_PUMP = 1;
		BALLAST_PUMP = 2;
		GS_PUMP = 3;
		IG_PUMP = 4;
		STRIPPING_PUMP = 5;
		STRIP_EDUCTOR = 6;
		COW_PUMP = 7;
		BALLAST_EDUCTOR = 8;
		TANK_CLEANING_PUMP = 9;
}

// To Show in machines in use Drop Down
enum TankTypeForOperations {
	EMPTY_TANK_TYPE = 0;
	PORT = 1;
	CENTER = 2;
	STBD = 3;
	WP = 4;
	WS = 5;
}

message VesselRequestWithPaging{
	int64 offset = 1;
	int64 limit = 2;
}

message VesselRequest {
	int64 companyId = 1;
	int64 vesselId = 2;
	int64 vesselDraftConditionId = 3;
	string draftExtreme = 4;
	repeated int64 tankCategories = 5;
	string draftForTpc = 6;
	repeated int64 vesselIds = 7;
	bool isShore = 8;
}

message LoadLineDetail {
	int64 id = 1;
	string name = 2;
	repeated string draftMarks = 3;
}

message VesselDetail {
	int64 id = 1;
	string name = 2;
	int64 captainId = 3;
	int64 cheifOfficerId = 4;
	string imoNumber = 5;
	string flag = 6;
	string charterer = 7;
	repeated LoadLineDetail loadLines = 8;
	string code = 9;
    string portOfRegistry = 10;
    string builder = 11;
    string officialNumber = 12;
    string signalLetter = 13;
    int64 navigationAreaId = 14;
    string typeOfShip = 15;
    string registerLength = 16;
    string lengthOverall = 17;
    string lengthBetweenPerpendiculars = 18;
    string breadthMolded = 19;
    string depthMolded = 20;
    string designedLoaddraft = 21;
    string draftFullLoadSummer = 22;
    string thicknessOfUpperDeckStringerPlate = 23;
    string thicknessOfKeelplate = 24;
    string deadweight = 25;
    string lightweight = 26;
    string lcg = 27;
    string keelToMastHeight = 28;
    string deadweightConstant = 29;
    string provisionalConstant = 30;
    string deadweightConstantLcg = 31;
    string provisionalConstantLcg = 32;
    string grossTonnage = 33;
    string netTonnage = 34;
    string deadweightConstantTcg = 35;
    string frameSpace3l = 36;
    string frameSpace7l = 37;
    bool hasLoadicator = 38;
    string homogeneousLoadingRate = 39;
    string wingTankLoadingRate = 40;
    string centerTankLoadingRate = 41;
    string maxLoadingRate = 42;
	string minLoadingRate = 43;
	string bmSfModelType = 44;
    string maxLoadRate = 45;
    string mastRiser = 46;
    string heightOfManifoldAboveDeck = 47;
}

message VesselLoadableQuantityDetails {
	string displacmentDraftRestriction = 1;
	string vesselLightWeight = 2;
	string constant = 3;
	string tpc = 4;
	string dwt = 5;
	string draftConditionName = 6;
	bool hasLoadicator = 7;
	double deadWeightConstant = 8;
}

message VesselTankDetail{
	int64 tankId = 1;
	int64 tankCategoryId = 2;
	string tankCategoryName = 3;
	string tankName = 4;
	string frameNumberFrom = 5;
	string frameNumberTo = 6;
	string shortName = 7;
	string fillCapacityCubm = 8;
	string density = 9;
	bool isSlopTank = 10;
	string heightFrom = 11;
	string heightTo = 12;
	int32 tankOrder = 13;
	int32 tankGroup = 14;
	string lcg = 15;
	string vcg = 16;
	string tcg = 17;
	int64 coatingTypeId = 18;
	int64 tankTypeId = 19;
	string fullCapacityCubm = 20;
	string colourCode = 21;
	string tankCategoryShortName = 22;
	bool showInOhqObq = 23;
	int32 tankDisplayOrder = 24;
	string tankPositionCategory = 25;
	bool isLoadicatorUsing = 26;
}

message VesselReply {
	int64 vesselId = 1;
	repeated VesselTankDetail vesselTanks = 2;
	ResponseStatus responseStatus = 3;
	repeated VesselDetail vessels = 4;
	VesselLoadableQuantityDetails vesselLoadableQuantityDetails = 5;
}

	message VesselAlgoRequest {
	int64 vesselId = 1;
	}

	message VesselAlgoReply {
		VesselDetail vesselDetail = 1;
		repeated VesselDraftCondition vesselDraftCondition = 2;
		repeated VesselTankDetail vesselTankDetail = 3;
		repeated HydrostaticData hydrostaticData = 4;
		repeated VesselTankTCG vesselTankTCG = 5;
		BMAndSF bMAndSF = 6;
		ResponseStatus responseStatus = 7;
		repeated UllageDetails ullageDetails = 8;
		repeated UllageTrimCorrection ullageTrimCorrection = 9;
		repeated SelectableParameter selectableParameter = 10;

		repeated PumpType pumpType = 11;
		repeated VesselPump vesselPump = 12;
    repeated TankType tankType = 13;
		repeated VesselComponent vesselManifold = 14;
		repeated VesselComponent vesselBottomLine = 15;
		repeated VesselPumpTankMapping vesselPumpTankMapping = 16;
		repeated VesselCowParameters vesselCowParameters = 17;
}

message VesselCowParameters{
	int64 id = 1;
	int64  vesselId = 2;
	string topCowMinDuration = 3;
	string topCowMaxDuration = 4;
	string bottomCowMinDuration = 5;
	string bottomCowMaxDuration = 6;
	string fullCowMinDuration = 7;
	string fullCowMaxDuration = 8;
	string topWashMinAngle = 9;
	string topWashMaxAngle = 10;
	string bottomWashMinAngle = 11;
	string bottomWashMaxAngle = 12;
}

message VesselPumpTankMapping {
	int64 vesselId = 1;
	VesselPump vesselPump = 2;
}

message BendingMomentType2 {
	int64 id = 1;
	string frameNumber = 2;
	string displacement = 3;
	string buay = 4;
	string difft = 5;
	string corrt = 6;
	string isActive = 7;
}

message BendingMomentType4 {
	int64 id = 1;
	string frameNumber = 2;
	string trim_m1 = 3;
	string trim_0 = 4;
	string trim_1 = 5;
	string trim_2 = 6;
	string trim_3 = 7;
	string trim_4 = 8;
	string trim_5 = 9;
	string isActive = 10;
}

message ShearingForceType1 {
	int64 id = 1;
	string frameNumber = 2;
	string baseDraft = 3;
	string baseValue = 4;
	string draftCorrection = 5;
	string trimCorrection = 6;
}

message ShearingForceType2 {
	int64 id = 1;
	string frameNumber = 2;
	string displacement = 3;
	string buay = 4;
	string difft = 5;
	string corrt = 6;
	string isActive = 7;
}

message ShearingForceType4 {
	int64 id = 1;
	string frameNumber = 2;
	string trim_m1 = 3;
	string trim_0 = 4;
	string trim_1 = 5;
	string trim_2 = 6;
	string trim_3 = 7;
	string trim_4 = 8;
	string trim_5 = 9;
	string isActive = 10;
}

message BendingMomentShearingForceType3 {  //bending_moment_shearing_force_type3
	int64 id = 1;
	string loadCondition = 2;
	string frameNumber = 3;
	string draftAp = 4;
	string draftFp = 5;
	string bendingMoment = 6;
	string shearingForce = 7;
	string isActive = 8;
}
	
	message SelectableParameter {
		string paramterName = 1;
		repeated ParameterValue values = 2;
	}
	message ParameterValue {
		int64 type = 1;
		string value = 2;
	}
	
	message UllageDetails {
	int64 id = 1;
	int64 tankId = 2;
	string ullageDepth = 3;
	string evenKeelCapacityCubm = 4;
	string soundDepth = 5;
	}

	message VesselDraftCondition {
	   int64 id = 1;
	   int64 draftConditionId = 2;
	   string depth = 3;
	   string freeboard = 4;
	   string draftExtreme = 5;
	   string displacement = 6;
	   string deadWeight = 7;
	}

	message HydrostaticData {
		int64 id = 1;
 	 	string trim = 2;
  		string draft = 3;
 	 	string displacement = 4;
 		string lcb = 5;
  		string lcf = 6;
  		string vcb = 7;
  		string tkm = 8;
  		string lkm = 9;
  		string mtc = 10;
		string tpc = 11;
	}

message VesselTankTCG {
	int64 id = 1;
	int64 tankId = 2;
	string capacity = 3;
	string tcg = 4;
	string lcg = 5;
	string vcg = 6;
	string inertia = 7;
}

message BMAndSF {
	repeated BendingMomentType1 bendingMomentType1 = 1;
	repeated ShearingForceType1 shearingForceType1 = 2;
	repeated CalculationSheet calculationSheet = 3;
	repeated CalculationSheetTankGroup calculationSheetTankGroup = 4;
	repeated MinMaxValuesForBMAndSf minMaxValuesForBMAndSf = 5;
	repeated StationValues stationValues = 6;
	repeated InnerBulkHeadSF InnerBulkHeadSF = 7;
	repeated BendingMomentType2 bendingMomentType2 = 8;
	repeated BendingMomentType4 bendingMomentType4 = 9;
	repeated ShearingForceType2 shearingForceType2 = 10;
	repeated ShearingForceType4 shearingForceType4 = 11;
	repeated BendingMomentShearingForceType3 bendingMomentShearingForce3 = 12;
}

message BendingMomentType1 {
	int64 id = 1;
	string frameNumber = 2;
	string baseDraft = 3;
	string baseValue = 4;
	string draftCorrection = 5;
	string trimCorrection = 6;
	}
		
	message CalculationSheet {
		int64 id = 1;
		int32 tankGroup = 2;
		int64 tankId = 3;
		string weightRatio = 4;
		string lcg = 5;
	}
		
	message CalculationSheetTankGroup {
		int64 id = 1;
		int32 tankGroup = 2;
		string lcg = 3; 
		string frameNumber = 4;
	}
		
	message MinMaxValuesForBMAndSf {
		int64 id = 1;
		string frameNumber = 2;
		string minBm = 3;
		string maxBm = 4;
		string minSf = 5;
		string maxSf = 6;
	}
		
	message StationValues {
		string stationFrom = 1;
		string stationTo = 2;
		string frameNumberFrom = 3;
		string frameNumberTo = 4;
		string distance = 5;
		int64 id = 6;
	}
		
	message InnerBulkHeadSF {
		string frameNumber = 1;
		string foreAlpha = 2;
		int64 foreCenterCargoTankId = 3;
		string foreC1 = 4;
		string foreWingTankIds = 5;
		string foreC2 = 6;
		string foreBallastTanks = 7;
		string foreC3 = 8;
		string foreBWCorrection = 9;
		string foreC4 = 10;
		string foreMaxAllowence = 11;
		string foreMinAllowence = 12;
		int64 id = 13;
		string aftAlpha = 14;
		int64 aftCenterCargoTankId = 15;
		string aftC1 = 16;
		string aftWingTankIds = 17;
		string aftC2 = 18;
		string aftBallastTanks = 19;
		string aftC3 = 20;
		string aftBWCorrection = 21;
		string aftC4 = 22;
		string aftMaxFlAllowence = 23;
		string aftMinFlAllowence = 24;
	}
	
	message UllageTrimCorrection {
		int64 id = 1;
		int64 tankId = 2;
		string ullageDepth = 3;
		string trimM1 = 4;
		string trimM2 = 5;
		string trimM3 = 6;
		string trimM4 = 7;
		string trimM5 = 8;
		string trim0 = 9;
		string trim1 = 10;
		string trim2 = 11;
		string trim3 = 12;
		string trim4 = 13;
		string trim5 = 14;
		string trim6 = 15;
	}
	message VesselTankRequest {
		repeated int64  tankIds = 1;
	}
	message VesselTankOrder {
		string tankName = 1;
		int64 tankId = 2;
		string shortName = 3;
		int32 tankDisplayOrder = 4;
	}
	message VesselTankResponse {
		repeated VesselTankOrder vesselTankOrder = 1;
		ResponseStatus responseStatus = 2;
	}
	message VesselIdRequest {
		int64 vesselId = 1;
	}
  message VesselIdResponse {
    VesselDetail vesselDetail = 1;
    ResponseStatus responseStatus = 2;
  }

	message VesselDWTRequest{
		int64 vesselId = 1;
		string draftValue = 2;
	}

	message VesselDWTResponse{
		int64 vesselId = 1;
		int64  companyId = 2;
		string dwtResult = 3;
		ResponseStatus responseStatus = 4;
	}

	message VesselPumpsResponse{
		ResponseStatus responseStatus = 1;
		repeated PumpType pumpType = 2;
		repeated VesselPump vesselPump = 3;
		repeated TankType tankType = 5;
		VesselDetail vesselDetails = 4;

		repeated VesselComponent vesselManifold = 6;
		repeated VesselComponent vesselBottomLine = 7;
	}

	message VesselComponent {
		int64 id = 1;
		int64 vesselId = 2;
		string componentName = 3;
		string componentCode = 4;
		int64 componentType = 5;
		int64 tankTypeId = 6; // needed at Algo Request
		string tankTypeName = 7; // needed at Algo Request
	}

	message TankType {
	int64 id = 1;
	string typeName = 2;
	}

	message PumpType{
	int64 id = 1;
	string name = 2;
	}

	message VesselPump{
		int64 id = 1;
		int64 vesselId = 2;
		int64 pumpTypeId = 3;
		string pumpName = 4;
		string pumpCode = 5;
		string pumpCapacity = 6;
		VesselTankDetail vesselTankDetail = 7;
	}
	message VesselRuleRequest{
	    int64 vesselId = 1;
		int64 sectionId = 2;
		repeated RulePlans rulePlan = 3;
		bool isNoDefaultRule = 4;
		bool isFetchEnabledRules = 5;
	}

	message VesselRuleReply{
	   ResponseStatus responseStatus = 1;
	   repeated RulePlans rulePlan = 2;
	   repeated CargoTankMaster cargoTankMaster = 3;
	   repeated RuleDropDownValueMaster ruleDropDownValueMaster = 4;
	   repeated RuleTypeMaster ruleTypeMaster = 5;
	}

	message VesselValveSequenceReply{
		ResponseStatus responseStatus = 1;
		repeated VesselValveSequence vvSequenceEntities = 2;
		repeated VesselValveEducationProcess vvEducationEntities = 3;
		repeated VesselValveAirPurgeSequence vvAirPurgeSequence = 4;
		repeated VesselValveStrippingSequence vvStrippingSequence = 5;
		repeated VesselValveStrippingSequenceCargoValve vvSSCargoValve = 6;
	}

	message VesselValveStrippingSequence {
		int64 id = 1;
		int64 vesselId = 2;
		string vesselName = 3;
		int32 pipeLineId = 4;
		string pipeLineName = 5;
		string colour = 6;
		int32 valveId = 7;
		string valve = 8;
		int32 sequenceNumber = 9;
		string manifoldName = 10;
		string manifoldSide = 11;
		string valveSide = 12;
	}

	message VesselValveAirPurgeSequence {
		int64 id = 1;
		int64 vesselId = 2;
		string vesselName = 3;
		string shortname = 4;
		int64 tankId = 5;
		int64 pumpId = 6;
		string pumpCode = 7;
		int32 sequenceNumber = 8;
		string valveNumber = 9;
		int32 valveId = 10;
		bool isShut = 11;
		bool isCopWarmup = 12;
		string manifoldName = 13;
		string manifoldSide = 14;
	}

	message VesselValveSequence{
		 int64 id = 1;
		 bool isCommonValve = 2;
		 bool isShut = 24;
		 int32 pipelineId = 3;
		 string pipelineColor = 4;
		 string pipelineName = 5;
		 string pipelineType = 6;
		 string pumpCode = 25;
		 string pumpName = 26;
		 string pumpType = 27;
		 string sequenceNumber = 7; // BigDecimal
		 int32 sequenceOperationId = 8;
		 string sequenceOperationName = 9;
		 int32 sequenceTypeId = 10;
		 string sequenceTypeName = 11;
		 int32 sequenceVesselMappingId = 12;
		 string tankShortName = 13;
		 string stageNumber = 28;
		 string valveCategory = 14;
		 int32 valveCategoryId = 15;
		 int32 valveId = 29;
		 string valveNumber = 16;
		 int32 valveSide = 17;
		 int32 valveTypeId = 18;
		 string valveTypeName = 19;
		 string vesselName = 20;
		 int32 vesselTankXid = 21;
		 int64 vesselXid = 23;
		 string manifoldName = 30;
		 string manifoldSide = 31;
	}

	message VesselValveStrippingSequenceCargoValve {
		int64 id = 1;
		int64 vesselId = 2;
		string vesselName = 3;
		int32 pipeLineId = 4;
		string pipeLineName = 5;
		string colour = 6;
		int32 valveId = 7;
		string valve = 8;
		int32 sequenceNumber = 9;
		string manifoldName = 10;
		string manifoldSide = 11;
		string valveSide = 12;
	}

	message VesselValveEducationProcess {
		int64 id = 1;
		string eductorName = 2;
		int32 sequenceNumber = 3;
		string stepName = 4;
		string valveNumber =5;
		int32 eductorId = 6;
		int32 eductionProcessMasterId = 7;
		int32 stageNumber = 8;
		int32 valveId = 9;
		string stageName = 10;
		int32 valveCategoryId = 11;
		string valveCategory = 12;
		int32 valveTypeId = 13;
		string valveTypeName = 14;
		int32 valveSide = 15;
		int64 vesselTankId = 16;
		string tankShortName = 17;
		string manifoldName = 18;
		string manifoldSide = 19;
	}
	
	message LoadingInfoRulesRequest {
		int64 vesselId = 1;
	}
	
	message LoadingInfoRulesReply {
		repeated Rules rules = 1;
		ResponseStatus responseStatus = 2;
	}
	
	message CargoTankMaster{
	  int64 id = 1;
	  string shortName = 2;
	}
	
	message RuleDropDownValueMaster{
	  int64 id = 1;
	  string value = 2;
	  int64 ruleTemplateId = 3;
	}
	
	message RuleTypeMaster{
	  int64 id = 1;
	  string ruleType = 2;
	}
	
	message VesselsInfoRequest{
		int64 pageSize = 1;
		int64 pageNo = 2;
		string sortBy = 3;
		string orderBy = 4;
		string vesselName = 5;
		string vesselType = 6;
		string owner = 7;
		string builder = 8;
		string dateOfLaunch = 9;
		string signalLetter = 10;
		string officialNumber = 11;
		repeated Param param = 12;
		repeated int64 crewXIds = 13;
		int64 vesselId = 14;
		int64 rankId = 15;
		string rankName =16;
	}
	
	message VesselsInformation{
		int64 vesselId = 1;
		string vesselName = 2;
		string vesselType = 3;
		string owner = 4;
		string builder = 5;
		string dateOfLaunch = 6;
		string signalLetter = 7;
		string officialNumber = 8;
	
	}
	
	message VesselsInformationReply{
		repeated VesselsInformation vesselsInformation = 1;
		ResponseStatus responseStatus = 2;
		int64 totalElement = 3;
	}
	
	message VesselTankInfo{
		int64 tankId = 1;
		int64 tankCategoryId = 2;
		string tankCategoryName = 3;
		string tankName = 4;
		string frameNumberFrom = 5;
		string frameNumberTo = 6;
		string shortName = 7;
		double fullCapacityCubm = 8;
		double density = 9;
		bool isSlopTank = 10;
		int32 tankOrder = 11;
		int32 tankGroup = 12;
		
	}

	message VesselTankReply{
		repeated VesselTankInfo vesselTankInfo = 1;
		ResponseStatus responseStatus = 2;
	}
	
	message VesselDetaildInfoReply{
		int64 vesselId = 1;
		string vesselName = 2;
		string vesselType = 3;
		string imoNumber = 4;
		string builder = 5;
		string dateOfLaunch = 6;
		string signalLetter = 7;
		string officialNumber = 8;
		string dateOfKeelLaid = 9;
		string dateOfDelivery = 10;
		string class = 11;
		string navigationArea = 12;
		int64 registerLength = 13;
		int64 lengthOverall = 14;
		double draftFullLoad = 15;
		int64 breadthMoulded = 16;
		int64 lengthBetweenPerpendiculars = 17;
		double depthMoulded = 18;
		double designedLoadDraft = 19;
		double thicknessOfUpperDeck = 20;
		double thicknessOfKeelPlate = 21;
		double totalDepth = 22;
		repeated VesselTankInfo bunkerRearTanks = 23;
		repeated VesselTankInfo bunkerTanks = 24;
		repeated VesselTankInfo ballastFrontTanks = 25;
		repeated VesselTankInfo ballastCenterTanks = 26;
		repeated VesselTankInfo ballastRearTanks = 27;
		repeated VesselTankInfo cargoTanks = 28;
		ResponseStatus responseStatus = 29;
		
		
	}

	message CrewRank {
			int64 id = 1;
			string crewName = 2;
			string rankShortName = 3;
	}

	message CrewReply {
		ResponseStatus responseStatus = 1;
		repeated CrewRank crewRanks = 2;
		int64 totalElements = 3;
	}


message CrewVesselMappingDetail {
	int64 id = 1;
	int64 crewId = 2;
	int64 vesselId = 3;
	string vesselName = 4;
}

message CrewVesselRequest {
	int64 crewId = 1;
	string vesselName = 2;
}

message CrewVesselReply {
	ResponseStatus responseStatus = 1;
	repeated CrewVesselMappingDetail vessels = 2;
}

message CrewDetailed {
	int64 id = 1;
	string crewName = 2;
	string crewRank = 3;
	int64  crewRankId = 4;
}

message CrewDetailedReply {
	ResponseStatus responseStatus = 1;
	repeated CrewDetailed crewDetails = 2;
	int64 totalElements = 3;
}

message CrewDetailsReply {
	ResponseStatus responseStatus = 1;
	CrewDetailed crewDetails = 2;
}

message CrewVesselMappingRequest {
	repeated CrewVesselMappingDetail crewVesselMappings =1;
}