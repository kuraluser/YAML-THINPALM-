syntax = "proto3";

option java_multiple_files = true; // to reduce generated file size
option java_package = "com.cpdss.common.generated.discharge_plan";

// import common definitions like ResponseStatus
import "common.proto";
import "loading_plan/loading_plan_models.proto";

// A generic request with Optional params
message DischargeInformationRequest{
  int64 companyId = 1;
  int64 vesselId = 2;
  int64 voyageId = 3;
  int64 dischargeInfoId = 4;
  int64 dischargePatternId = 5;
  int64 portRotationId = 6;
  int64 synopticTableId = 7;
}

message DischargingPlanReply {
  ResponseStatus responseStatus = 7;
  int64 loadingInfoId = 1;
  DischargeInformation dischargingInformation = 8;
  repeated LoadingSequence dischargingSequences = 2;
  repeated LoadingPlanTankDetails portDischargingPlanStowageDetails = 3;
  repeated LoadingPlanTankDetails portDischargingPlanBallastDetails = 4;
  repeated LoadingPlanTankDetails portDischargingPlanRobDetails = 5;
  repeated LoadingPlanStabilityParameters portDischargingPlanStabilityParameters = 6;
}

message DischargingPlanStabilityParameters {
  string draft = 1;
  string trim = 2;
  string bm = 3;
  string sf = 4;
  int32 conditionType = 5;
  int32 valueType = 6;
  string foreDraft = 7;
  string aftDraft = 8;
  int32 time = 9;
  string meanDraft = 10;
  string list = 11;
}

message DischargingPlanTankDetails {
  string api = 1;
  int64 cargoNominationId = 2;
  string quantity = 3;
  int64 tankId = 4;
  string temperature = 5;
  string ullage = 6;
  string quantityM3 = 7;
  string sounding = 8;
  int32 conditionType = 9;
  int32 valueType = 10;
  int64 id = 11;
}
message DischargingSequence {
  int64 cargoNominationId = 1;
  int32 startTime = 2;
  int32 endTime = 3;
  int64 portId = 4;
  int32 sequenceNumber = 5;
  string stageName = 6;
  bool toLoadicator = 7;
  repeated Valve cargoValves = 8;
  repeated Valve ballastValves = 9;
  repeated LoadingRate loadingRates = 10;
  repeated DeBallastingRate deBallastingRates = 11;
  repeated LoadingPlanPortWiseDetails loadingPlanPortWiseDetails = 12;
  string cargoLoadingRate1 = 13;
  string cargoLoadingRate2 = 14;
  repeated PumpOperation ballastOperations = 15;
}

message DischargeInformation {
  int64 dischargeInfoId = 8;
  int64 synopticTableId = 9;
  ResponseStatus responseStatus = 1;
  DischargeDetails dischargeDetails = 2;
  DischargeRates dischargeRate = 3;
  repeated DischargeBerths berthDetails = 4;
  repeated LoadingMachinesInUse machineInUse = 10;
  LoadingStages dischargeStage = 5; // reusing
  DischargeDelay dischargeDelay = 6;
  CowPlan cowPlan = 11;
  PostDischargeStageTime postDischargeStageTime = 7;
}

message DischargeDetails {
  int64 id = 1;
  string timeOfSunrise = 2;
  string timeOfSunset =3;
  string startTime = 4;
  TrimAllowed trimAllowed = 5;
  int64 voyageId = 6;
}

message DischargeRates {
  string initialDischargeRate = 1;
  string maxDischargeRate = 2;
  string minBallastRate = 3;
  string maxBallastRate = 4;
  int64 id = 5;
}

message DischargeBerths {
  int64 id = 1; // primary key
  int64 dischargeInfoId = 2;
  int64 berthId = 3;
  string depth = 4;
  string maxManifoldHeight = 5;
  string maxManifoldPressure = 6;
  string hoseConnections = 7;
  string seaDraftLimitation = 8;
  string airDraftLimitation = 9;
  bool airPurge = 10;
  bool cargoCirculation = 11;
  string lineDisplacement = 12;
  string specialRegulationRestriction = 13;
  string itemsToBeAgreedWith = 14;
}

message DischargeMachinesInUse{
  int64 id = 1; // primary key
  int64 dischargeInfoId = 2;
  int64 machineId = 3;
  string capacity = 4;
  bool isUsing = 5;
  MachineType machineType = 6;
}

message DischargeDelay {
  repeated DelayReasons reasons = 1; // master data
  repeated DischargeDelays delays = 2; // user data
}

message DischargeDelays {
  int64 id = 1; // primary key
  int64 dischargeInfoId = 2;
  repeated int64 reasonForDelayIds = 3;
  string duration = 4;
  int64 cargoId = 5;
  string quantity = 6;
  int64 cargoNominationId = 7;
}

message PostDischargeStageTime {
  string timeForDryCheck = 1;
  string slopDischarging = 2;
  string finalStripping = 3;
  string freshOilWashing = 4;
}

message CowPlan {
  COW_OPTION_TYPE cowOptionType = 1;
  string cowTankPercent = 2;
  string cowStartTime = 3;
  string cowEndTime = 4;
  string estCowDuration = 5;
  string trimCowMin = 6;
  string trimCowMax = 7;
  bool needFreshCrudeStorage = 8;
  bool needFlushingOil = 9;
  repeated CowTankDetails cowTankDetails = 10;
}

message CowTankDetails {
  COW_TYPE cowType = 1;
  repeated int64 tankIds = 2;
  repeated CargoForCow cargoForCow = 3;
}


message CargoForCow {
  int64 cargoId = 1;
  int64 cargoNominationId = 2;
  int64 washingCargoId = 3;
  int64 washingCargoNominationId = 4;
  repeated int64 tankIds = 5;
}

message DischargeRuleRequest{
  int64 vesselId = 1;
  int64 sectionId = 2;
  repeated RulePlans rulePlan = 3;
  int64 dischargeInfoId = 4;
  bool isNoDefaultRule = 5;
}

message DischargeRuleReply{
  ResponseStatus responseStatus = 1;
  repeated RulePlans rulePlan = 2;
}

message DischargeStudyDataTransferRequest{
	repeated PortData portData = 1;
	int64 dischargePatternId = 2;
	int64 voyageId = 3;
	int64 vesselId = 4;
}

message PortData{
  int64 portId = 4;
	int64 portRotationId = 1;
  int64 synopticTableId = 2;
  DSCowDetails cowDetails = 5;
}

message DSCowDetails {
  CowTankDetails cowTankDetails = 1;
  int64 dischargeStudyId = 2;
  float percent = 4;
  COW_OPTION_TYPE cowOptionType = 5;
}

message DischargingUploadTideDetailRequest {
	bytes tideDetaildata = 1;
	ResponseStatus responseStatus = 2;
	int64 loadingId = 3;
}

message DischargingUploadTideDetailStatusReply {
	ResponseStatus responseStatus = 1;
}

message DischargingDownloadTideDetailRequest {
	int64 loadingId = 1;
}

message DischargingDownloadTideDetailStatusReply {
	ResponseStatus responseStatus = 1;
	bytes data = 2;
	int32 size = 3;
}

message DischargingInstructionRequest {
  int64 dischargingInfoId = 1;
  int64 vesselId = 2;
  int64 portRotationId = 3; 
}


message DischargingInstructions {
  int64 instructionTypeId = 1;
  int64 instructionHeaderId = 2;
  int64 instructionId =3;
  string instruction = 4;
  bool isChecked =5;
  bool isEditable =6;
}

message DischargingInstructionSubHeader {
  int64 instructionTypeId = 1;
  int64 instructionHeaderId = 2;
  int64 subHeaderId = 3;
  string subHeaderName = 4;
  bool isChecked =5;
  repeated DischargingInstructions dischargingInstructionsList =6;
  bool isEditable =7;
  bool IsHeaderInstruction = 8;
  
}

message DischargingInstructionGroup {
  int64 groupId =1;
  string groupName = 2;
}

message DischargingInstructionDetails {
  repeated DischargingInstructionSubHeader dischargingInstructionSubHeader =1;
  repeated DischargingInstructionGroup dischargingInstructionGroupList =2;
  ResponseStatus responseStatus = 3;
}

message DischargingInstructionsSave {
  int64 headerId = 1;
  int64 instructionTypeId = 2;
  bool isChecked = 3;
  bool isSingleHeader = 4;
  int64 subHeaderId = 5;
  string instruction = 6;
  bool isSubHeader = 7;
  int64 dischargingInfoId = 8;
  int64 vesselId = 9;
  int64 portRotationId = 10;
}

message DischargingInstructionsUpdate{
  repeated DischargingInstructionStatus instructionList = 1;
}

message DischargingInstructionStatus{
  int64 instructionId = 1;
  bool isChecked = 2;
  string instruction =3;
}

message DischargePlanAlgoRequest {
  ResponseStatus responseStatus = 1;
  string requestAsJsonString = 2;
}

message LoadingPlanSaveRequest {
  int64 loadingInfoId = 1;
  string processId = 2;
  repeated LoadingSequence dischargingSequences = 3;
  repeated LoadingPlanTankDetails portDischargingPlanStowageDetails = 4;
  repeated LoadingPlanTankDetails portDischargingPlanBallastDetails = 5;
  repeated LoadingPlanTankDetails portDischargingPlanRobDetails = 6;
  repeated LoadingPlanStabilityParameters portDischargingPlanStabilityParameters = 7;
  repeated LoadingPlanStabilityParameters dischargingSequenceStabilityParameters = 8;
  repeated AlgoErrors algoErrors = 9;
  bool hasLoadicator = 10;
  string loadingPlanDetailsFromAlgo = 11;
  repeated LoadingPlanCommingleDetails portDischargingPlanCommingleDetails = 12;
}