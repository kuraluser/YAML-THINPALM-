syntax = "proto3";

option java_multiple_files = false;
option java_package = "com.cpdss.common.generated";

// import common definitions like ResponseStatus
import "common.proto";

service LoadableStudyService {
	rpc SaveVoyage (VoyageRequest) returns (VoyageReply) {
	}
	
	rpc GetVoyagesByVessel (VoyageRequest) returns (VoyageListReply) {
	}
	
	rpc SaveLoadableQuantity (LoadableQuantityRequest) returns (LoadableQuantityReply) {
	}
	
	rpc FindLoadableStudiesByVesselAndVoyage (LoadableStudyRequest) returns (LoadableStudyReply){
	}

	rpc SaveLoadableStudy (LoadableStudyDetail) returns (LoadableStudyReply){
	}
	
	rpc SaveCargoNomination (CargoNominationRequest) returns (CargoNominationReply){
	}
	
	rpc GetLoadableStudyPortRotation (PortRotationRequest) returns (PortRotationReply){
	}

	rpc GetCargoNominationById (CargoNominationRequest) returns (CargoNominationReply){
	}
	
	rpc GetValveSegregation (ValveSegregationRequest) returns (ValveSegregationReply){
	}


  	rpc getLoadableQuantity (LoadableQuantityReply) returns (LoadableQuantityResponse) {
	}
	
	rpc SaveLoadableStudyPortRotation (PortRotationDetail) returns (PortRotationReply){
	}
	
	rpc DeleteCargoNomination (CargoNominationRequest) returns (CargoNominationReply){
	}
		
	rpc SaveDischargingPorts(PortRotationRequest) returns (PortRotationReply){
	}
	rpc GetPortRotationByLoadableStudyId (PortRotationRequest) returns (PortRotationReply){
	}
		
	rpc DeleteLoadableStudy(LoadableStudyRequest) returns (LoadableStudyReply){
	}
	
	rpc DeletePortRotation(PortRotationRequest) returns (PortRotationReply){
	}
	
	rpc GetOnHandQuantity(OnHandQuantityRequest) returns (OnHandQuantityReply){
	}
	
	rpc SaveOnHandQuantity(OnHandQuantityDetail) returns (OnHandQuantityReply){
	}
	rpc GetLoadablePatternDetails(LoadablePatternRequest) returns (LoadablePatternReply){
	}
	rpc GetPurposeOfCommingle (PurposeOfCommingleRequest) returns (PurposeOfCommingleReply){
	}
	
	rpc GetCommingleCargo (CommingleCargoRequest) returns (CommingleCargoReply){
	}
	
	rpc SaveCommingleCargo (CommingleCargoRequest) returns (CommingleCargoReply){
	}
}


message VoyageRequest {
	int64 captainId = 1;
	int64 chiefOfficerId = 2;
	int64 companyId = 3;
	int64 vesselId = 4;
	string voyageNo = 5;
}

message VoyageReply {
	int64 voyageId = 1;
	StatusReply responseStatus = 2;
}

message VoyageDetail{
	int64 id = 1;
	string voyageNumber = 2;
}

message VoyageListReply{
	StatusReply responseStatus = 1;
	repeated VoyageDetail voyages = 2;
}

message StatusReply {
	string status = 1;
	string code = 2;
	string message = 3;
}


message LoadableQuantityRequest {
	string estSeaDensity = 1;
	string tpc = 2;
	string estSagging = 3;
	string displacmentDraftRestriction = 4;
	string vesselLightWeight = 5;
	string dwt = 6;
	string sgCorrection = 7;
	string saggingDeduction = 8;
	string estFOOnBoard = 9;
	string estDOOnBoard = 10;
	string estFreshWaterOnBoard = 11;
	string constant = 12;
	string otherIfAny = 13;
	string totalQuantity = 14;
	string distanceFromLastPort = 15;
	string vesselAverageSpeed = 16;
	int64 loadableStudyId = 17;
	string updateDateAndTime = 18;
	string sg = 19;
	string boilerWaterOnBoard = 20;
	string ballast = 21;
	string runningHours = 22;
	string runningDays = 23;
	string foConInSZ = 24;
	int64 portId = 25;
	string draftRestriction = 26;
	string subTotal = 27;
	string foConsumptionPerDay = 28;
}

message LoadableQuantityReply {
	StatusReply responseStatus = 1;
	int64 loadableQuantityId = 2;
	int64 loadableStudyId = 3;
}

message LoadableStudyRequest{
	int64 companyId = 1;
	int64 vesselId = 2;
	int64 voyageId = 3;
	int64 loadableStudyId = 4;
}

message LoadableStudyAttachment{
	bytes byteString = 1;
	string fileName = 2;
}

message LoadableStudyDetail{
	int64 id = 1;
	string name = 2;
	string detail = 3;
	int64 statusId = 4;
	string status = 5;
	string createdDate = 6;
	string charterer = 7;
	string subCharterer = 8;
	string draftMark = 9;
	int64 loadLineXId = 10;
	string draftRestriction = 11;
	string maxAirTemperature = 12;
	string maxWaterTemperature = 13;
	int64 duplicatedFromId = 14;
	int64 voyageId = 15;
	int64 vesselId = 16;
	repeated LoadableStudyAttachment attachments = 17;
	repeated int64 dischargingPortIds = 18;
}

message LoadableStudyReply{
	ResponseStatus responseStatus = 1;
	repeated  LoadableStudyDetail loadableStudies = 2;
	int64 id = 3;
}

message LoadingPortDetail{
	int64 portId = 1;
	string quantity = 2;
}

message segregationDetail{
	int64 id = 1;
	string value = 2;
}

message CargoNominationDetail {
	int64 id = 1;
	int64 loadableStudyId = 2;
	int64 priority = 3;
	string color = 4;
	int64 cargoId = 5;
	string abbreviation = 6;
	repeated LoadingPortDetail loadingPortDetails = 7;
	string quantity = 8;
	string maxTolerance = 9;
	string minTolerance = 10;
	string apiEst = 11;
	string tempEst = 12;
	int64 segregationId = 13;
}

message CargoNominationRequest {
	int64 vesselId = 1;
	int64 voyageId = 2;
	int64 loadableStudyId = 3;
	int64 cargoNominationId = 4;
	CargoNominationDetail cargoNominationDetail = 5;
}

message CargoNominationReply {
	ResponseStatus responseStatus = 1;
	int64 cargoNominationId = 2;
	repeated CargoNominationDetail cargoNominations = 3;
}


message PortRotationRequest{
	int64 loadableStudyId = 1;
	int64 vesselId = 2;
	int64 voyageId = 3;
	repeated int64 dischargingPortIds = 4;
	int64 id = 5;
}

message PortRotationDetail{
	int64 id = 1;
	int64 portId=2;
	int64 berthId=3;
	int64 operationId=4;
	string seaWaterDensity=5;
	string distanceBetweenPorts =6;
	string timeOfStay=7;
	string maxDraft=8;
	string maxAirDraft=9;
	string eta=10;
	string etd=11;
	string layCanFrom=12;
	string layCanTo=13;
	int64 loadableStudyId=14;
	int64 portOrder=15;
}

message Operation{
	int64 id=1;
	string operationName=2;
}

message PortRotationReply{
	ResponseStatus responseStatus = 1;
	repeated PortRotationDetail ports=2;
	repeated Operation operations=3;
	int64 portRotationId = 4;
}

message LoadableQuantityResponse {
	LoadableQuantityRequest loadableQuantityRequest = 1;
	StatusReply responseStatus = 2;
	int32 caseNo = 3;
	string selectedZone = 4;
}

message ValveSegregation{
	int64 id = 1;
	string name = 2;
}

message ValveSegregationRequest{
	int64 loadableStudyId = 1;
}

message ValveSegregationReply{
	ResponseStatus responseStatus = 1;
	repeated ValveSegregation valveSegregation = 2;
}

message OnHandQuantityRequest{
	int64 companyId = 1;
	int64 vesselId = 2;
	int64 loadableStudyId = 3;
	int64 portId = 4;
}

message OnHandQuantityDetail{
	int64 id = 1;
	int64 portId = 2;
	int64 fuelTypeId = 3;
	string fuelType = 4;
	int64 tankId = 5;
	string tankName = 6;
	string arrivalVolume = 7;
	string arrivalQuantity = 8;
	string departureVolume = 9;
	string departureQuantity = 10;
	int64 loadableStudyId = 11;
}

message TankDetail{
	int64 tankId = 1;
	int64 tankCategoryId = 2;
	string tankCategoryName = 3;
	string tankName = 4;
	string frameNumberFrom = 5;
	string frameNumberTo = 6;
	string shortName = 7;
	string fillCapacityCubm = 8;
	string density = 9;
	bool isSlopTank = 10;
	string heightFrom = 11;
	string heightTo = 12;
	int32 tankOrder = 13;
	int32 tankGroup = 14;
}

message TankList{
	repeated TankDetail vesselTank = 1;
}

message OnHandQuantityReply{
	ResponseStatus responseStatus = 1;
	repeated OnHandQuantityDetail onHandQuantity = 2;
	repeated TankList vesselTanks = 3;
	int64 id = 4;
}

message PurposeOfCommingle{
	int64 id = 1;
	string name = 2;
}

message PurposeOfCommingleRequest{
	int64 loadableStudyId = 1;
}

message PurposeOfCommingleReply{
	ResponseStatus responseStatus = 1;
	repeated PurposeOfCommingle purposeOfCommingle = 2;
}
message LoadablePatternReply {
 	repeated LoadablePattern loadablePattern = 1;
 	ResponseStatus responseStatus = 2;
}

message LoadablePattern {
	int64 loadablePatternId = 1;
	repeated LoadablePatternCargoDetails loadablePatternCargoDetails = 2;
}

message LoadablePatternCargoDetails {
 	int64 priority = 1;
  	string cargoAbbreviation = 2;
  	string cargoColor = 3;
 	int64 tankId = 4;
 	string quantity = 5;
 	string difference = 6;
 	string constraints = 7;
 	string differenceColor = 8;
}

message LoadablePatternRequest {
 	int64 loadableStudyId = 1;
}

message CommingleCargo{
	int64 id = 1;
	int64 purposeId = 2;
	bool slopOnly = 3;
	repeated int64 preferredTanks = 4;
	int64 cargo1Id = 5;
	string cargo1pct = 6;
	int64 cargo2Id = 7;
	string cargo2pct = 8;
    string quantity = 9;
}

message CommingleCargoRequest{
	int64 loadableStudyId = 1;
	repeated CommingleCargo commingleCargo = 2;
}

message CommingleCargoReply{
	ResponseStatus responseStatus = 1;
	repeated CommingleCargo commingleCargo = 2;
}
