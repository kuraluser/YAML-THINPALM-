syntax = "proto3";

option java_multiple_files = false;
option java_package = "com.cpdss.common.generated";

message ResponseStatus {
	string status = 1;
	string message = 2;
	string code = 3;
	int32 httpStatusCode = 4;
}

enum PLANNING_TYPE {
		VALUE_A = 0;
		LOADABLE_STUDY = 1;
		DISCHARGE_STUDY = 2;
}

// In loading information, machine in use
enum MachineType {
	  EMPTY = 0;
		VESSEL_PUMP = 1;
		MANIFOLD = 2;
		BOTTOM_LINE = 3;
}


message BillOfLadding{
  int64 id = 1;
  int64 portId = 2;
  int64 cargoNominationId = 3;
  string quantityBbls = 4;
  string quantityMt = 5;
  string quantityKl = 6;
  string api = 7;
  string temperature = 8;
  string cargoColor = 9;
  string cargoName = 10;
  string cargoAbbrevation = 11;
  repeated int64 loadingPort = 12;
  int64 cargoId = 13;
  string blRefNo = 14;
  string quantityLT = 15;
}

message RulePlans{
	string header = 1;
	repeated Rules rules = 2;
}
	
message Rules{
	 string id = 1;
	 bool enable = 2; 
	 bool disable = 3;
	 bool displayInSettings = 4;
	 string ruleType = 5;
	 repeated RulesInputs inputs = 6;
	 string ruleTemplateId = 7;
	 string vesselRuleXId = 8;
	 bool isHardRule = 9;
	 int64 numericPrecision = 10;
	 int64 numericScale = 11;
}
	
message RulesInputs{
	 string prefix = 1;
	 string defaultValue = 2;
	 string type = 3;
	 string max = 4;
	 string min = 5;
	 string value = 6;
	 string suffix = 7;
	 string id = 8;
	 repeated RuleDropDownMaster ruleDropDownMaster = 9;
	 bool isMandatory = 10;
}

message RuleDropDownMaster{
     int64 id = 1;
     string value = 2;
}

enum COW_TYPE {
	EMPTY_COW_TYPE = 0;
	ALL_COW = 1; // Full wash
	BOTTOM_COW = 2; // Bottom wash
	TOP_COW = 3; // Top wash
	CARGO = 4;
}

enum COW_OPTION_TYPE {
	EMPTY_COW_OPTION_TYPE = 0;
	AUTO = 1;
	MANUAL = 2;
}

// On voyage close get tank wise data
// Ops means - operations modules - port wise data
message CargoHistoryOpsRequest {
	int64 voyageId = 1;
	int64 vesselId = 2;
}
message CargoHistoryResponse {
	ResponseStatus responseStatus = 1;
	repeated CargoHistoryOps cargoHistory = 2;
}
message CargoHistoryOps {
	int64 tankId = 1;
	string api = 2;
	string temperature = 3;
	int64 cargoNominationId = 4;
	int64 cargoId = 5; // nullable
	int64 portId = 6;
	string quantity = 7;
	string updateDate = 8;
}

//	Communication request object for fetching tables
message CommunicationDataGetRequest {
	repeated int64 id = 1;
	string tableName = 2;
}

//	Communication request object for updating tables
message CommunicationDataUpdateRequest {
	string dataJson = 1;
	string tableName = 2;
}

//	Communication response object with table data
message CommunicationDataResponse {
	string dataJson = 1;
	ResponseStatus responseStatus = 2;
}