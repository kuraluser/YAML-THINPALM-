version: '3.7'

services:
  prometheus:
    image: docker.io/bitnami/prometheus:2
    user: root
    ports:
      - '6090:9090'
    volumes: 
      - ${VOL_SOURCE}/prometheus/prometheus-persistence:/opt/bitnami/prometheus/data
      - ${VOL_SOURCE}/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
      - ${VOL_SOURCE}/prometheus/rules.yml:/opt/bitnami/prometheus/conf/rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
  alertmanager:
    image: docker.io/bitnami/alertmanager:0
    ports:
      - '6093:9093'	
    dns: 8.8.8.8  
    volumes:
      - ${VOL_SOURCE}/prometheus/alertmanager-persistence:/opt/bitnami/data
      - ${VOL_SOURCE}/prometheus/alertmanager.yml:/opt/bitnami/alertmanager/conf/config.yml
      - ${VOL_SOURCE}/prometheus/notifications.tmpl:/opt/bitnami/alertmanager/notifications.tmpl
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  grafana:
    image: docker.io/bitnami/grafana:8
    ports:
      - '6080:3000'
    dns: 8.8.8.8
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      - 'GF_SECURITY_ADMIN_PASSWORD=bitnami'
      - 'GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}'
      - 'GF_SERVER_SERVE_FROM_SUB_PATH=true'
    volumes:
      - grafana_data:/opt/bitnami/grafana/data
  node-exporter:
    image: docker.io/bitnami/node-exporter:1
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  login-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    command:
      - -nginx.scrape-uri
      - http://login-service:80/stub_status
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  cpdss-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    command:
      - -nginx.scrape-uri
      - http://cpdss-service:80/stub_status
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  comm-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    command:
      - -nginx.scrape-uri
      - http://envoy-${CPDSS_ENV}-service:81/stub_status
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  grafana_data:
    driver: local

networks:
  default:
    external: true
    name: cpdss-network