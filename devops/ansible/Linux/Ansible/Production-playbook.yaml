# Ansible playbook CPDSS Ship Installation - Docker Microservices
---
- name: "CPDSS - Microservice Installation - Producti0n Instance"
  hosts: all
  become: true
  gather_facts: yes
  vars:  
     inventory_hostname: MY_HOST_IP
     
  tasks:
  
    
    - name: Get My_hostip
      debug: var=inventory_hostname
   
    - name: Update all packages
      apt:
        name: '*'
        state: latest
        update_cache: yes
        force_apt_get: yes
    

    - name: Ensure a list of apt packages are installed
      apt:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3-pip
        - awscli
        - docker-compose
        - cifs-utils

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
    
    - name: add user to docker group
      ansible.builtin.user:
        name: '{{ ansible_ssh_user }}'
        groups: docker
        append: yes

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: reset ssh connection to allow user changes to affect ansible user
      meta: reset_connection
        

    - name: Check if swarm is already initialised
      shell: |
        docker info | grep "Swarm: active" | wc -l
      register: swarm_checked
    
    - name: output debug
      debug: var=swarm_checked

    - name: Init Swarm
      command: docker swarm init
      when: swarm_checked.stdout == "0"

    - name: Check if cpdss-network is already created
      shell: docker network ls | grep "cpdss-network" | wc -l
      register: nw_checked

    - name: output debug
      debug: var=nw_checked
    
    - name: Create CPDSS Network
      remote_user: '{{ ansible_ssh_user }}'
      shell: docker network create cpdss-network --scope swarm --driver overlay --attachable
      when: nw_checked.stdout == "0"
    
    - name: Get User Home Directory
      shell: >
             getent passwd {{ ansible_ssh_user }}  | awk -F: '{ print $6 }'
      changed_when: false
      register: user_home

    - name: Create QNAP Directory
      remote_user: '{{ ansible_ssh_user }}'
      file:
        path: '/mnt/backup'
        state: directory
        owner: "nobody"
        group: "nogroup"
    
    - name: create etc backup cred 
      copy:
        dest: "/etc/backup-cred"
        content: |
          username=cpdssadmin
          password=Cpdss@@!234
          domain=gassan.ship.molsa.com.sg

    
    - name: Create fstab entry for backup drive
      mount: 
        state: present 
        fstype: cifs
        opts: "credentials=/etc/backup-cred,sec=ntlmsspi,vers=3.0"  
        src: "//10.226.16.213/CP-DSS Backup"
        path: '/mnt/backup'
      become: true
    
    
    - name: Check if qnap is already mounted
      shell: df | grep "/mnt/backup" | wc -l
      register: qnap_checked
    
    - name: output debug
      debug: var=qnap_checked

    # - name: Mount backup drive
    #   shell: |
    #     mount '/mnt/backup'
    #   become: true
    #   when: qnap_checked.stdout == "0"

    - name: 'create mount directory for {{ env_name }}'
      file:
        path: '/mnt/backup/{{ env_name }}'
        state: directory
        owner: "nobody"
        group: "nogroup"
        mode: 0777
    
    - name: Create Envoy Data Directory
      file:
        path: '/mnt/backup/{{ env_name }}/envoy-data'
        state: directory

    - name: Create Json Directory
      file:
        path: '/mnt/backup {{ env_name }}/json'
        state: directory
