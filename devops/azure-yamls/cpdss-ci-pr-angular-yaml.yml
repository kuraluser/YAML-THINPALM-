# CPDSS CI Yaml Pipeline
trigger: none
pr: none

variables:
- group: CPDSS-Build-Global-Variables
name: 5.0.$(rev:r)
jobs:
- job: Job_1
  displayName: CPDSS Services Build
  pool:
    vmImage: ubuntu-20.04
  steps:
  - checkout: self
    clean: true
  - task: AWSShellScript@1
    displayName: Login to ECR
    inputs:
      awsCredentials: 'Alpha-Ori-AWS'
      regionName: ap-southeast-1
      scriptType: inline
      inlineScript: >-
        token=$(aws ecr get-login-password --region ap-southeast-1)

        echo "##vso[task.setvariable variable=DOCKER_PASSWORD]$token"
  - task: Bash@3
    displayName: Configure Docker
    inputs:
      targetType: filePath
      filePath: './devops/pipeline-scripts/docker-setup.sh'
  - task: Npm@1
    displayName: npm Clean Install
    inputs:
      command: ci
      workingDir: web/cpdss-portal
      verbose: false
  - task: Bash@3
    displayName: Set Environment Variable for CPDSS
    inputs:
      targetType: inline
      script: >-
        echo "##vso[task.setvariable variable=HOST_MAPPED_PORT]81"

        echo "##vso[task.setvariable variable=DOCKER_HOST]tcp://127.0.0.1:2375"


        echo "hosted mapped port :" $(HOST_MAPPED_PORT)
  - task: gulp@0
    displayName: Gulp Build CPDSS
    inputs:
      gulpFile: web/cpdss-portal/gulpfile.js
      targets: build
      arguments: --cpdss $(GULP_ARG)
  - task: Bash@3
    displayName: Set Environment Variable for Login
    inputs:
      targetType: inline
      script: >-
        echo "##vso[task.setvariable variable=HOST_MAPPED_PORT]80"


        echo "hosted mapped port :" $(HOST_MAPPED_PORT)
  - task: gulp@0
    displayName: Gulp Build Login
    inputs:
      gulpFile: web/cpdss-portal/gulpfile.js
      targets: build
      arguments: --login $(GULP_ARG)